@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,400;1,700&display=swap");

:root {
    --white: #fff;
    --ash: #eee;
    --content: #333;
    --pastelGreen: #1de9b6;
    --orange: #fb8c00;
    --skyBlue: #29b6f6;
    --blue: #2196f3;
    --violet: #7c4dff;
    --fiolek: #ab47bc;
    --magenta: #f50057;
    --gold: #ffc107;
}
* {
    box-sizing: border-box;
}
html {
    font-size: 62.5%;
}
body {
    margin: 0;
    font-family: "Montserrat", sans-serif;
    color: var(--content);
}
/* class color */
.content {
    background-color: var(--content);
}
.pastel-green {
    background-color: var(--pastelGreen);
}
.orange {
    background-color: var(--orange);
}
.sky-blue {
    background-color: var(--skyBlue);
}
.blue {
    background-color: var(--blue);
}
.violet {
    background-color: var(--violet);
}
.fiolek {
    background-color: var(--fiolek);
}
.magenta {
    background-color: var(--magenta);
}
.gold {
    background-color: var(--gold);
}

.page-title {
    font-size: 3rem;
    font-weight: 700;
    text-align: center;
    margin: 20px 0 50px;
}
.section-title {
    font-size: 1.6rem;
    font-weight: 400;
}
.section-text {
    font-size: 1.2rem;
    font-weight: 400;
}
.page-nav {
    display: flex;
    justify-content: flex-end;
    height: 50px;
    margin: 10px;
}
.page-nav ul {
    padding: 0;
    margin: 0;
    list-style-type: none;
    display: flex;
}
.page-nav li {
    margin-left: 10px;
}
.page-nav a {
    display: block;
    padding: 15px 50px;
    background-color: var(--fiolek);
    color: var(--white);
    border-radius: 3px;
    text-decoration: none;
    cursor: pointer;
    font-size: 1.6rem;
    font-weight: 700;
    transition: background-color 0.5s ease-in-out;
}
.page-nav a:hover {
    background-color: #9a40a9;
}
.box-groups {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    margin-bottom: 50px;
}
.box-wrapper {
    display: grid; /* parent */
    width: 100%;
    background-color: var(--ash);
    counter-reset: iteration;
    border-right: 1px solid var(--content);
}
.box {
    color: var(--white);
    text-align: center;
}
.box::after {
    content: counter(iteration);
    counter-increment: iteration;
    font-size: 1.6rem;
    font-weight: 700;
}
.grid-template-columns {
    grid-template-columns: 100px 100px 50px;
} /* kazda wartosc to jedna kolumna - parent */ /* jedostki fr, dostepne miejsce */
.grid-template-rows {
    grid-template-rows: 100px 100px;
} /* kazda wartosc to jeden wiersz - parent */
.grid-row-gap {
    grid-row-gap: 10px;
} /* parent */
.grid-column-gap {
    grid-column-gap: 10px;
} /* parent */
.grid-gap {
    grid-gap: 20px 10px;
} /* shorthand dla row i column - parent */
.grid-template-rows-repeat-1 {
    grid-template-rows: repeat(2, 100px); /* tworzy 3 wierszy po 100px */
}
.grid-template-rows-repeat-2 {
    grid-template-rows: repeat(2, 100px) repeat(2, 50px) 1fr 2fr 25px;
    /* funkcja repeat moze byc przeplatana wlasciwosciami abolutnymi */
}
.grid-template-rows-repeat-3 {
    grid-template-rows: repeat(5, minmax(50px, 100px));
    /* 5 wierszy, najmniejsza wartosc to 50, najwieksza 100 */ /* dobre do RWD */
}
.grid-template-columns-repeat-1 {
    grid-template-columns: repeat(3, 100px);
}
.grid-template-columns-repeat-2 {
    grid-template-columns: 1fr repeat(2, 100px) 2fr 50px repeat(2, 25px);
}
.grid-template-columns-repeat-3 {
    grid-template-columns: repeat(5, minmax(50px, 100px));
}
.grid-template-columns-auto-fit {
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    /* tworzy x kolumn po 100px, nie tworzy dodatkowych kolumn */
}
.grid-template-columns-auto-fill {
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    /* tworzy x kolumn po 100px, tworzy dodatkowe kolumny, puste */
}
.grid-column {
    grid-column: span 3;
} /* item ma miec szerokosc 3 kolumn - child  */
.grid-row {
    grid-row: span 3;
} /* item ma miec wysokosc 3 wierszy - child  */

.grid-column-line {
    grid-column: 1 / 3; /* na 2 pozycji mozemy dac wartosc -1 to bedzie calosc, -2 to bd bez ostatniej kolumny */
} /* ułożenie elementu miedzy linią siatki 1 a 3 - child  */
.grid-row-line {
    grid-row: 2 / 4;
} /* ułożenie elementu miedzy linią siatki 2 a 4 - child  */

.grid-template-areas {
    grid-template-areas:
        "header header header"
        "content content sidebar"
        "footer footer footer";
}
/* najpierw musimy dany element nazwac tak jak w ID */
#header {
    grid-area: header;
}
#content {
    grid-area: content;
}
#sidebar {
    grid-area: sidebar;
}
#footer {
    grid-area: footer;
}
